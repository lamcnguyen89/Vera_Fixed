version: "3.9"
services:
  client:
    image: sh-client:prod
    container_name: sh-client
    build:
      context: client
      target: client-prod

    environment:
      PORT: "80"
      TWINE_PORT: "80"
      REACT_APP_PROTOCOL: "http"
      REACT_APP_DOMAIN: "localhost"
      MONGO_DOMAIN: "mongo"
      # CHOKIDAR_USEPOLLING: "true"
    ports:
      - 127.0.0.1:4001:80
    depends_on: 
      - twine 
      - api
  twine:
    image: sh-twine:prod
    container_name: sh-twine
    build:
      context: client/modules/twine
      dockerfile: Dockerfile
      target: twine-prod


  api:
    image: sh-api:prod
    build:
      context: server
      target: api-prod
    container_name: sh-api
    environment:
      NODE_APACHE_PASSWORD: "Basic "
      PROTOCOL: "https"
      MONGO_DB: ${MONGO_DB}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASS: ${MONGO_PASS}
      MONGO_AUTH_DB: ${MONGO_AUTH_DB}
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      DOMAIN: ${DOMAIN}
      NODE_ENV: production
    volumes:
      - /usr/node_modules

    command: ["node", "dist/server.js"]
    depends_on: 
      - mongo
    restart: on-failure

  mongo:
    container_name: mongo
    image: mongo:prod
    restart: always
    volumes:
      - dbdata:/data/db
      - ./mongo:/dbinit
    build:
      context: mongo
      dockerfile: Dockerfile  

    ports:
      - 127.0.0.1:27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_ROOT_DATABASE: ${MONGO_AUTH_DB}
    logging:
      driver: none
      
volumes:
  dbdata:
