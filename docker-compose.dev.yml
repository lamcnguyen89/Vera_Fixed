version: "3.4"
services:
  nginx:
    image: sh-nginx:debug
    container_name: sh-nginx
    build:
      context: nginx
      target: nginx-prod
      # CHOKIDAR_USEPOLLING: "true"
    depends_on:
      # - twine 
      - api
      - client
    ports:
      - 4001:8080
      - 4000:80
    volumes:
      - "./nginx/nginx-debug.conf:/etc/nginx/conf.d/default.conf:delegated"

  client:
    image: sh-client:debug
    container_name: sh-client
    build:
      context: client
      target: debug
      # dockerfile: ./Dockerfile
    environment:
      # NODE_ENV: production
      PORT: "${PORT}"
      REACT_APP_PROTOCOL: "${REACT_APP_PROTOCOL}"
      REACT_APP_DOMAIN: "${REACT_APP_DOMAIN}"
      MONGO_DOMAIN: "mongo"
      # CHOKIDAR_USEPOLLING: "true"
    volumes:
      - "./client/src:/app/src:delegated"
      - "./client/public:/app/public:delegated"
      - "/app/node_modules"
    command: [ "npm", "start" ]

  # twine:
  #   image: sh-twine:debug
  #   container_name: sh-twine
  #   build:
  #     context: client/modules/twine
  #     target: twine-dev
  #     # dockerfile: ./Dockerfile
  #   environment:
  #     NODE_ENV: development
  #   volumes:
  #     - "./client/modules/twine/twinejs/src:/usr/src/app/twine/src:delegated"
  #     - "./client/modules/twine/harlowe/js:/usr/src/app/story-formats/harlowe-3\
  #       .2.3/js:delegated"
  #     - /usr/src/app/twine/node_modules
  #   command: [ "npm", "run", "start-expose" ]
  #   # command: ["tail", "-F", "anything"]
  #   ports:
  #     - 8081
  api:
    image: sh-api:debug
    container_name: sh-api
    build:
      context: server
      target: build
      # dockerfile: ./server/Dockerfile
    env_file: ./.env
    environment:
      NODE_APACHE_PASSWORD: "Basic "
      PROTOCOL: "http"
      # NODE_ENV: production
    volumes:
      - "./server/src:/usr/src:delegated"
      - /usr/src/node_modules
    command: [ "npm", "run", "debug" ]
    ports:
      - 9229:9229
    restart: on-failure
    depends_on:
      - mongo
  mongo:
    container_name: mongo
    image: mongo:prod
    restart: always
    volumes:
      - db-data:/data/db
      - ./mongo/sherlock-insert.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    build:
      context: mongo
      dockerfile: Dockerfile
    ports:
      - 127.0.0.1:27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: ${MONGO_AUTH_DB}
    # logging:
    #   driver: none
volumes:
  db-data: null
